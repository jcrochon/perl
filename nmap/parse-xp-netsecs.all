#!/usr/bin/perl

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#    Jason C. Rochon                                                                  #
#    Apr 24, 2014                                                                     #
#                                                                                     #
#    Notes:                                                                           #
#                                                                                     #
#        1.) cron job: weekly                                                         #
#            A.) gateway-1: private                                                   #
#            B.) gateway-2: public                                                    #
#            C.) Possible Servers included, instead use parse-xp-netsecs              #
#                                                                                     #
#        2.) Searches for XP machines via nmap and reports:                           #
#            A.) Hostname (IP)                                                        #
#            B.) MAC                                                                  #
#            C.) OS                                                                   #
#                                                                                     #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

#use strict;
#use warnings;
#use diagnostics;
#use Data::Dumper qw(Dumper);
use Nmap::Parser;

 # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#    Declare Vars                                                                       #
 # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

our ($zone, @zones, @newzones, $oldzone, @cc, $cc, $z);
my $np = new Nmap::Parser;

 # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Parse File                                                                            #
 # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
 
my $infile = $ARGV[0];
$np->parsefile($infile);


 # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Session Data                                                                          #
 # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
 
my $si = $np->get_session();
print "Windows XP Machines Online between ".$si->start_str()." and ".$si->time_str()."\n\n";


 # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Find XP Machines                                                                      #
 # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
 
for my $host ($np->all_hosts) {
	my $os = $host->os_sig;
        
	if ($os->osgen eq "XP") {
	    my $zone = ($host->hostname."\t"
	               .$host->ipv4_addr."\t"
	               .$host->mac_addr."\t"
	               .$os->name."\n");
	    push (@zones, $zone);
	}
}

 # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#   Print Sorted File                                                                   #
 # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

@newzones = sort { 
        ($a =~ /.*\.(.*\.uic\.edu) *./)[0] cmp 
        ($b =~ /.*\.(.*\.uic\.edu) *./)[0] 
} @zones;

&print_netsecs(@newzones);


 # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#   Priming DB2 Access                                                                  #
 # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

use UIC::MQ::BasicClients;
use PBUIC ( DB2 => {TBCREATOR => "pb"});
require UIC::PW; UIC::PW->import(DB2=>{TBCREATOR=>'pw',});


use UIC::Paw;
use PBUIC ( DB2 => { TBCREATOR => "pb" } );

require UIC::PW;
UIC::PW->import( DB2 => { TBCREATOR => 'pw', } );

require PBUIC;
PBUIC->import(
        DB2 => {
                TBCREATOR => 'pb',
                DATABASE  => 'pbtigger',
                USER      => 'webpbrw',
                PASSWD    => UIC::Paw::get('webpbrw@rabbit'),
        },
);


# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
##    Read File                                                                          #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#
#while(<>){
#        push(@zones,"$_");
#}


 # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#   Query Who To CC                                                                     #
 # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

sub who_cc {
    $z = shift;

    my $ps = PersonSet->fill(
        -LIAISON_TYPE => 'NETSEC',
        -ZONE_2_LIAISON => $z,
    );

        foreach my $p ( $ps->getPersistents ) {
                push @$cc, $p->pnetid . '@uic.edu';
        }
        $cc = join( ';', @$cc );
    return ($cc);
}


 # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#   Print Netsecs                                                                        #
 # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
sub print_netsecs {
	
	$oldzone = undef;
	foreach (@newzones){
	        $zone = $1 if ( $_ =~ /.*\.(.*\.uic\.edu).*/ );
	        my $currzone = $zone;
	 
	        print "\n\nZone: $zone" unless ($oldzone eq $currzone);
	        print "\nNetsec: ".&who_cc($zone)."\n" unless ($oldzone eq $currzone);
	
	        print "\n$&"; # all info
	 
	        $oldzone = $currzone;
	}
    print "\n";
}

 # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#   Exit Routine                                                                        #
 # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

print "\n\n";
exit; 
